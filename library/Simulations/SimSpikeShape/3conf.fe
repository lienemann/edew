e3: 0

// centroid
quantity centrx info_only method facet_vector_integral
vector_integrand:
q1: 0
q2: x*y/drop_volume
q3: 0

#define drop_radius (((drop_volume / topdist)^(1/2))/2)
#define drop_start_h (drop_volume/(4*drop_radius^2))

vertices
1 -drop_radius+drop_x -drop_radius+psy/2 0 constraint 1
2  drop_radius+drop_x -drop_radius+psy/2 0 constraint 1
3  drop_radius+drop_x  drop_radius+psy/2 0 constraint 1
4 -drop_radius+drop_x  drop_radius+psy/2 0 constraint 1
5 -drop_radius+drop_x -drop_radius+psy/2 topdist constraint 2
6  drop_radius+drop_x -drop_radius+psy/2 topdist constraint 2
7  drop_radius+drop_x  drop_radius+psy/2 topdist constraint 2
8 -drop_radius+drop_x  drop_radius+psy/2 topdist constraint 2

edges
 1  1  2 constraint 1
 2  2  3 constraint 1
 3  3  4 constraint 1
 4  4  1 constraint 1
 5  5  6 constraint 2
 6  6  7 constraint 2
 7  7  8 constraint 2
 8  8  5 constraint 2
 9  1  5
10  2  6
11  3  7
12  4  8

faces
1 1 10 -5  -9 density surface_tension centrx
2 2 11 -6 -10 density surface_tension centrx
3 3 12 -7 -11 density surface_tension centrx
4 4  9 -8 -12 density surface_tension centrx

bodies
1 1 2 3 4 volume drop_volume

read
// *******************************************
// * Initializing simulation, please wait... *
// *******************************************
quiet
quietgo
show_trans "15r4dr"
autodisplay off
gridflag off
labelflag off
pscolorflag on
showon:=1;
redraw:= {if (showon) then showq;};

equiltol:=0.4e-12
equil:={
  conj_grad on;
  g 50;
  hessian;
  g 20;
  do { equiloldE:=total_energy; g10;
  redraw;
  } while ( abs( total_energy-equiloldE ) > equiltol );
  conj_grad off;
}
equilnh:={
  conj_grad on;
  g 50;
  do { equiloldE:=total_energy; g10;
  redraw;
  } while ( abs( total_energy-equiloldE ) > equiltol );
  conj_grad off;
}
